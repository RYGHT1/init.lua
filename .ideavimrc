" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc


"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
 text scroll if you mouse-click near the start or end of the window.
set scrolloff=8
set number relativenumber
set idearefactormode=keep
set ideajoin

" Do incremental searching.
set incsearch

" Use Space as leader
let mapleader = " "

" Remap J and K in visual mode
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv

" Remap J in normal mode
nnoremap J mzJ`z
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz
nnoremap n nzzzv
nnoremap N Nzzzv

" Greatest remap ever
xnoremap <leader>p "_dP

" Next greatest remap ever
nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y "+Y

" Refactors
map <leader>re <Action>(RenameElement)viw
map <leader>rv <Action>(IntroduceVariable)
map <leader>rm <Action>(ExtractMethod)
map <leader>rs <Action>(SurroundWith)

" Delete without yanking
nnoremap <leader>d "_d

" Escape in insert mode with Ctrl-c
inoremap <C-c> <Esc>

" Disable Ex mode
nnoremap Q <nop>
map <leader>e <Action>(ActivateProjectToolWindow)

" Format with leader-l
map <leader>l <Action>(ReformatCode)

" IntellijStuff
map <leader><CR> <Action>(ShowIntentionActions)
map <leader>g <Action>(Generate)

" Jump to the next/previous quickfix
nnoremap <C-k> :cnext<CR>zz
nnoremap <C-j> :cprev<CR>zz

" Jump to the next/previous location list
nnoremap <leader>k :lnext<CR>zz
nnoremap <leader>j :lprev<CR>zz

" NEED MY FUZZY FINDER
map <leader>ff <Action>(GotoFile) 
map <leader>fp <C-F> 
" Search and replace with leader+s
" nnoremap <leader>s :%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>


" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

Plug 'tpope/vim-commentary'
Plug 'dbakker/vim-paragraph-motion'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)